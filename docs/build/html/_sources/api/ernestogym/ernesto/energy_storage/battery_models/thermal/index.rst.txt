ernestogym.ernesto.energy_storage.battery_models.thermal
========================================================

.. py:module:: ernestogym.ernesto.energy_storage.battery_models.thermal


Submodules
----------

.. toctree::
   :maxdepth: 1

   /api/ernestogym/ernesto/energy_storage/battery_models/thermal/dummy/index
   /api/ernestogym/ernesto/energy_storage/battery_models/thermal/mlp_network/index
   /api/ernestogym/ernesto/energy_storage/battery_models/thermal/r2c/index
   /api/ernestogym/ernesto/energy_storage/battery_models/thermal/rc/index


Classes
-------

.. autoapisummary::

   ernestogym.ernesto.energy_storage.battery_models.thermal.DummyThermal
   ernestogym.ernesto.energy_storage.battery_models.thermal.RCThermal
   ernestogym.ernesto.energy_storage.battery_models.thermal.R2CThermal


Package Contents
----------------

.. py:class:: DummyThermal(**kwargs)

   Bases: :py:obj:`ernestogym.ernesto.energy_storage.battery_models.generic_models.ThermalModel`


   The Dummy Thermal model simply simulates the temperature of the battery by copying the ground temperature.
   NOTE: this model cannot be employed to generate new data (what-if simulation)


   .. py:property:: temps


   .. py:method:: reset_model(**kwargs)


   .. py:method:: init_model(**kwargs)

      Initialize the model at timestep t=0 with an initial temperature equal to 25 degC (ambient temperature)



   .. py:method:: compute_temp(**kwargs)


.. py:class:: RCThermal(components_settings: dict)

   Bases: :py:obj:`ernestogym.ernesto.energy_storage.battery_models.generic_models.ThermalModel`


   Pellegrino paper (@reference [paper link])


   .. py:property:: r_term


   .. py:property:: c_term


   .. py:method:: reset_model(**kwargs)


   .. py:method:: init_model(**kwargs)

      Initialize the model at timestep t=0 with an initial temperature equal to 2 degC (ambient temperature)



   .. py:method:: compute_temp(q, T_amb, dt, k=-1, i=None)

      Compute the current temperature with equation described in the aforementioned paper

      Inputs:
      :param q: power dissipated adopted as heat
      :param T_amb: ambient temperature
      :param dt: delta of time from last update
      :param k: iteration
      :param i: actual current in the circuit



.. py:class:: R2CThermal(components_settings: dict, **kwargs)

   Bases: :py:obj:`ernestogym.ernesto.energy_storage.battery_models.generic_models.ThermalModel`


   Scarpelli-Fioriti paper
   TODO: implement this class (which could be too dependent on cell physical factors)


   .. py:property:: soc


   .. py:property:: c_term


   .. py:property:: r_cond


   .. py:property:: r_conv


   .. py:property:: dv_dT


   .. py:method:: reset_model(**kwargs)


   .. py:method:: init_model(**kwargs)

      Initialize the model at timestep t=0 with an initial temperature equal to 25 degC (ambient temperature)



   .. py:method:: load_battery_state(**kwargs)


   .. py:method:: compute_temp(q, i, T_amb, dt, k=-1)

      Compute the current temperature with equation described in the aforementioned paper
      :param q: power dissipated adopted as heat
      :type q: float
      :param i: actual current in the circuit
      :type i: float
      :param T_amb: ambient temperature
      :type T_amb: float
      :param dt: delta of time from last update
      :type dt: float
      :param k: iteration
      :type k: int



